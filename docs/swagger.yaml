definitions:
  go-xianyu_api_v1.CommentResponse:
    properties:
      avatar:
        type: string
      content:
        type: string
      create_time:
        type: string
      username:
        type: string
    type: object
  go-xianyu_api_v1.CreateCommentRequest:
    properties:
      content:
        type: string
      post_id:
        type: integer
      user_id:
        type: string
    type: object
  go-xianyu_api_v1.CreateMessageRequest:
    properties:
      chatroomId:
        type: string
      content:
        type: string
      create_time:
        type: string
    type: object
  go-xianyu_api_v1.CreateUserBasicRequest:
    properties:
      openid:
        type: string
      username:
        description: 默认是openid
        type: string
    type: object
  go-xianyu_api_v1.GetProfileResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/go-xianyu_api_v1.GetProfileResponseData'
      message:
        type: string
    type: object
  go-xianyu_api_v1.GetProfileResponseData:
    properties:
      nickname:
        example: alan
        type: string
      userId:
        type: string
    type: object
  go-xianyu_api_v1.LoginRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  go-xianyu_api_v1.LoginResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/go-xianyu_api_v1.LoginResponseData'
      message:
        type: string
    type: object
  go-xianyu_api_v1.LoginResponseData:
    properties:
      accessToken:
        type: string
    type: object
  go-xianyu_api_v1.PostPaginationResponse:
    properties:
      category:
        type: string
      createtime:
        type: string
      img:
        type: string
      info:
        type: string
      post_id:
        type: integer
      price:
        type: number
      title:
        type: string
      user_avatar:
        type: string
      username:
        type: string
    type: object
  go-xianyu_api_v1.RegisterRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  go-xianyu_api_v1.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  go-xianyu_api_v1.UpdateProfileRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      nickname:
        example: alan
        type: string
    required:
    - email
    type: object
  go-xianyu_api_v1.UpdateUserStudentCode:
    properties:
      studentCode:
        type: string
      userId:
        type: string
    type: object
  go-xianyu_internal_model.Post:
    properties:
      category:
        description: 类别：二手 / 兼职任务
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      img:
        description: 商品图片URL - 多图用分号隔开
        type: string
      info:
        description: 商品说明
        type: string
      price:
        description: 商品价格
        type: number
      title:
        description: 商品标题
        type: string
      updatedAt:
        type: string
      userId:
        description: 发布者UserId
        type: string
    type: object
  go-xianyu_pkg_wx.GetOpenIdByCodeResponse:
    properties:
      errcode:
        type: integer
      errmsg:
        type: string
      openid:
        type: string
      session_key:
        type: string
      unionid:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Nunu Example API
  version: 1.0.0
paths:
  /comment:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 创建评论
      tags:
      - 评论模块
  /comments:
    get:
      consumes:
      - application/json
      parameters:
      - description: 商品postId
        in: query
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/go-xianyu_api_v1.CommentResponse'
            type: array
      summary: 获取商品下所有评论
      tags:
      - 评论模块
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.LoginResponse'
      summary: 账号登录
      tags:
      - 用户模块
  /login_openid:
    get:
      consumes:
      - application/json
      parameters:
      - description: openid
        in: query
        name: openid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.LoginResponse'
      summary: 使用openid登录
      tags:
      - 用户模块
  /message:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.CreateMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 创建留言
      tags:
      - 留言模块
  /openid:
    get:
      consumes:
      - application/json
      description: 后台微信小程序获取openid
      parameters:
      - description: js_code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_pkg_wx.GetOpenIdByCodeResponse'
      summary: 获取openid
      tags:
      - 用户模块
  /post:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_internal_model.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: 发布二手信息
      tags:
      - 二手信息模块
  /posts:
    get:
      consumes:
      - application/json
      parameters:
      - description: page number
        in: query
        name: pageNum
        required: true
        type: integer
      - description: page size
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/go-xianyu_api_v1.PostPaginationResponse'
            type: array
      security:
      - Bearer: []
      summary: 分页获取二手信息
      tags:
      - 二手信息模块
  /register:
    post:
      consumes:
      - application/json
      description: 目前只支持邮箱登录
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.Response'
      summary: 用户注册
      tags:
      - 用户模块
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.GetProfileResponse'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 用户模块
    put:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.Response'
      security:
      - Bearer: []
      summary: 修改用户信息
      tags:
      - 用户模块
  /user/studentcode:
    put:
      consumes:
      - application/json
      description: 根据提供的学生代码和用户ID更新用户信息
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.UpdateUserStudentCode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新用户的学生代码
      tags:
      - 用户模块
  /user_auto:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/go-xianyu_api_v1.CreateUserBasicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-xianyu_api_v1.Response'
      summary: 使用openid创建用户
      tags:
      - 用户模块
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
